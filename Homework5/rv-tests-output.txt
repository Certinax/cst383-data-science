# output from running rv-tests.py from within Spyder

pmf = PMF(np.array([1,2,3]), np.array([0.5, 0.1, 0.4]))

pmf.sample(4)
Out[4]: array([1, 3, 2, 1])

pmf.expect()
Out[5]: 1.9000000000000001

pmf.variance()
Out[6]: 0.8900000000000001

pmf.prob(np.array([1]))
Out[7]: 0.5

pmf.prob(np.array([1,3]))
Out[8]: 0.9

pmf.prob(np.array([4]))
Out[9]: 0.0

pmf.plot()
# output not shown


pmf = PMF(np.array([250, 540, 750]), np.array([0.2, 0.5, 0.3]))

pmf.plot()
# output not shown
￼

pmf.expect()
Out[13]: 545.0

np.sqrt(pmf.variance())
Out[14]: 173.27723451163456

pmf.prob(np.array([250, 540]))
Out[15]: 0.7

X = RV(np.array([[0,0], [0,1], [1,0], [1,1]]), np.full(4, 0.25), np.array([0,1,1,2]))
Y = RV(np.array([[0,0], [0,1], [1,0], [1,1]]), np.full(4, 0.25), np.array([0,1,1,0]))

X.sample(5)
Out[17]: array([1, 1, 2, 2, 1])

X.expect()
Out[18]: 1.0

X.variance()
Out[19]: 0.5

X.plot()
# output not shown
￼

X.prob(np.array([2]))
Out[21]: 0.25

X.prob(np.array([1,2]))
Out[22]: 0.75

X.event(np.array([1]))
Out[23]: array([False,  True,  True, False])

X.event(np.array([2]))
Out[24]: array([False, False, False,  True])

X.cond_prob(np.array([1]), np.array([True, True, True, False]))
Out[25]: 0.6666666666666666

X.cond_prob(np.array([2]), np.array([True, True, True, False]))
Out[26]: 0.0

X.cond_prob(np.array([1]), X.event(np.array([1,2])))
Out[27]: 0.6666666666666666

Z = X.add(Y)

Z.variance()
Out[29]: 0.75

X2 = X.apply_fun(lambda x: x**2)

X2.variance()
Out[31]: 2.25

n = 6
rolls = list(itertools.product(range(6), range(6)))
outcomes = np.array(rolls).reshape((-1,2))+1
probs = np.full(n*n, 1/(n*2))
vals = np.apply_along_axis(np.sum, 1, outcomes)
x = RV(outcomes, probs, vals)

x.plot()
# output not shown
￼

x.expect()
Out[34]: 7.000000000000002

x.variance()
Out[35]: 5.833333333333334

x.prob(np.array([2]))
Out[36]: 0.027777777777777783

x.prob(np.array([7]))
Out[37]: 0.16666666666666669

x.prob(np.array(list(range(2,11))))
Out[38]: 0.9166666666666667

x.cond_prob(np.array([2]), x.event(np.array([1,2,3])))
Out[39]: 0.33333333333333337